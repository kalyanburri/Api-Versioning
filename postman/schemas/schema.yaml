openapi: '3.1.0'
info:
  version: '1.0.1'
  title: 'Api Versioning'
  description: Buy or rent spacecrafts

paths:
  /ecr/orders/{orderId}:
    parameters:
      - name: version
        description: version of order status api
        in: header
        required: true
        schema:
          type: string
          enum: 
            - v1
            - v2
      - name: orderId
        description: The unique identifier of the order
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/OrderId'
    get:
      summary: Get order status
      responses:
        '200': 
          description: Order status response
          content:
            application/json:        
              schema:
                oneOf:
                  - $ref: '#/components/schemas/OrderStatusResponse'
                  - $ref: '#/components/schemas/Spacecraft'
                discriminator:
                  propertyName: version
                  mapping:
                    v2: '#/components/schemas/OrderStatusResponse'
                    v1: '#/components/schemas/Spacecraft'
        # '200': 
        #   # description: The order details corresponding to the provided `orderId` for version=2018-07-01
        #   description: Response for version=2018-07-01
        #   content:
        #     application/json:
        #       schema:
        #         $ref: '#/components/schemas/OrderStatusResponse'
  /spacecrafts/{spacecraftId}:
    parameters:
      - name: spacecraftId
        description: The unique identifier of the spacecraft
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SpacecraftId'
    get:
      summary: Read a spacecraft
      responses:
        '200':
          description: The spacecraft corresponding to the provided `spacecraftId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Spacecraft'
        404:
          description: No spacecraft found for the provided `spacecraftId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    OrderId:
      description: The unique identifier of a order
      type: string
    OrderStatusResponse:
      type: object
      required:
        - status_id
        - status
        - id
        - merchant_id
        - amount
        - currency
        - order_id
        - date_created
        - return_url
        - product_id
        - txn_id
      example:
        status_id: 21
        status: CHARGED
        id: ordeh_57dfd768bb7d4896bc042y0b90bc9ad77
        merchant_id: merchant_success
        amount: 1
        currency: INR
        order_id: JP1636474794
        date_created: 2021-11-09T16:19:55Z
        return_url: url
        product_id: product123
        txn_id: merchant_success-JP1636474794-1
      properties:
        status_id:
          type: integer
        status:
          type: string
        id:
          type: string
        merchant_id:
          type: string
        amount:
          type: string
        currency:
          type: string
        order_id:
          $ref: '#/components/schemas/OrderId'
        date_created:
          type: string
        return_url:
          type: string
        product_id:
          type: string
        txn_id:
          type: string
        

    SpacecraftId:
      description: The unique identifier of a spacecraft
      type: string
    Spacecraft:
      type: object
      required:
        - id
        - name
        - type
      properties:
        id:
          $ref: '#/components/schemas/SpacecraftId'
        name:
          type: string
        type:
          type: string
          enum:
            - capsule
            - probe
            - satellite
            - spaceplane
            - station
        description:
          type: string
    Error:
      type: object
      required:
        - message
      properties:
        message:
          description: A human readable error message
          type: string
  securitySchemes:
    ApiKey:
      type: apiKey
      in: header
      name: Authorization
security:
  - ApiKey: []